{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import './banner.scss'\nimport React from \"react\";\nimport SimpleReactValidator from 'simple-react-validator';\nimport { Toast } from \"../../../../service/toast\";\nexport class ContactUs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleInputChange\", event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        email: _objectSpread(_objectSpread({}, this.state.email), {}, {\n          [name]: value\n        })\n      });\n    });\n\n    _defineProperty(this, \"sendEmail\", () => {\n      let {\n        email\n      } = this.state;\n\n      if (this.validator.allValid()) {\n        this.setState({\n          isSendLoder: true\n        });\n        console.log(JSON.stringify(email), email.body);\n        this.validator.hideMessages();\n        Email.send({\n          Host: \"smtp.gmail.com\",\n          Username: \"nsrchicken2020@gmail.com\",\n          Password: \"nsr2020@123\",\n          To: email.toId,\n          From: \"nsrchicken2020@gmail.com\",\n          Subject: \"Customer number: \" + email.phone,\n          Body: email.body\n        }).then(message => {\n          let email = {\n            name: '',\n            toId: '',\n            phone: '',\n            body: ''\n          };\n          Toast({\n            type: 'success',\n            message: 'mail sent successfully',\n            title: 'success'\n          });\n          this.setState({\n            isSendLoder: false,\n            email\n          });\n        }).catch(error => {\n          Toast({\n            type: 'danger',\n            message: 'mail server error',\n            title: 'Error'\n          });\n          this.setState({\n            isSendLoder: false\n          });\n        });\n      } else {\n        this.validator.showMessages();\n      }\n    });\n\n    this.state = {\n      email: {\n        name: '',\n        toId: '',\n        phone: '',\n        body: ''\n      },\n      isSendLoder: false\n    };\n    this.validator = new SimpleReactValidator({\n      element: message => __jsx(\"span\", {\n        className: \"error-message text-danger validNo fs14\"\n      }, message),\n      autoForceUpdate: this\n    });\n  } // componentDidMount() {\n  //     this.validator = new SimpleReactValidator({\n  //         element: message => (\n  //             <span className=\"error-message text-danger validNo fs14\">{message}</span>\n  //         ),\n  //         autoForceUpdate: this,\n  //     });\n  // }\n\n\n  render() {\n    let {\n      email,\n      isSendLoder\n    } = this.state;\n    return (// <!-- Contact Section-->\n      __jsx(\"section\", {\n        className: \"page-section\",\n        id: \"contact\"\n      }, __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(\"h2\", {\n        className: \"page-section-heading text-center text-uppercase text-secondary mb-0\"\n      }, \"CONTACT US\"), __jsx(\"div\", {\n        className: \"divider-custom\"\n      }, __jsx(\"div\", {\n        className: \"divider-custom-line\"\n      }), __jsx(\"div\", {\n        className: \"divider-custom-icon\"\n      }, __jsx(\"i\", {\n        className: \"fas fa-star\"\n      })), __jsx(\"div\", {\n        className: \"divider-custom-line\"\n      })), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-lg-8 mx-auto\"\n      }, __jsx(\"div\", {\n        className: \"control-group\"\n      }, __jsx(\"div\", {\n        className: \"form-group floating-label-form-group controls mb-0 pb-2\"\n      }, __jsx(\"label\", null, \"Name\"), __jsx(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        placeholder: \"Name\",\n        value: email.name,\n        name: \"name\",\n        onChange: this.handleInputChange\n      })), this.validator.message('Name', email.name, 'required|max:15')), __jsx(\"div\", {\n        className: \"control-group\"\n      }, __jsx(\"div\", {\n        className: \"form-group floating-label-form-group controls mb-0 pb-2\"\n      }, __jsx(\"label\", null, \"Email Address\"), __jsx(\"input\", {\n        className: \"form-control\",\n        id: \"email\",\n        type: \"email\",\n        value: email.toId,\n        name: \"toId\",\n        onChange: this.handleInputChange,\n        placeholder: \"Email Address\",\n        required: \"required\"\n      })), this.validator.message('Email', email.toId, 'required|email')), __jsx(\"div\", {\n        className: \"control-group\"\n      }, __jsx(\"div\", {\n        className: \"form-group floating-label-form-group controls mb-0 pb-2\"\n      }, __jsx(\"label\", null, \"Phone Number\"), __jsx(\"input\", {\n        className: \"form-control\",\n        id: \"phone\",\n        type: \"text\",\n        value: email.phone,\n        name: \"phone\",\n        onChange: this.handleInputChange,\n        placeholder: \"Phone Number\"\n      })), this.validator.message('Phone', email.phone, 'required')), __jsx(\"div\", {\n        className: \"control-group\"\n      }, __jsx(\"div\", {\n        className: \"form-group floating-label-form-group controls mb-0 pb-2\"\n      }, __jsx(\"label\", null, \"Message\"), __jsx(\"textarea\", {\n        className: \"form-control\",\n        id: \"message\",\n        rows: \"5\",\n        placeholder: \"Message\",\n        value: email.body,\n        onChange: this.handleInputChange,\n        name: \"body\"\n      })), this.validator.message('body', email.body, 'required|max:3000')), __jsx(\"br\", null), __jsx(\"div\", {\n        id: \"success\"\n      }), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"button\", {\n        onClick: this.sendEmail,\n        className: \"btn btn-primary btn-xl\",\n        id: \"sendMessageButton\",\n        type: \"submit\"\n      }, isSendLoder ? __jsx(\"span\", {\n        className: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }) : \"\", \" Send\"))))))\n    );\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}